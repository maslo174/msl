#include <stdlib.h>
#include <stdio.h>
#include <semaphore.h>
#include <string.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <fcntl.h>
#include <math.h>
#include <errno.h>
#include <unistd.h>



int main (int argc,char** argv)
{
  int fd = open ("./myfile.txt", O_RDWR | O_CREAT, 0666);
  if (fd==-1)
  {
    printf ("can't create file\n");
    return 0;
  }
  if ( ftruncate(fd,1)==-1)
  {
    printf ("can't truncate file");
    return 0;
  }
  char buffer[20];
  snprintf (buffer,20,"%d",0);
  write (fd,buffer,strlen(buffer));
  sem_t *s1=sem_open ("s1",O_RDWR | O_CREAT,0666,1);
  if (s1==SEM_FAILED)
  {
    printf("can't create semaphore");
    return 0;
  }
  int n;
  printf ("insert number of steps\n");
  scanf ("%d",&n);
  if (fork()==-1)
  {
    printf("cant fork");
    return 0;
  }
  int i;
  for (i=0;i<n;++i)
  {
    if (sem_wait(s1)==-1)
    {
      printf ("Semafor can't wait");
      return 0;
    }
    if (lseek(fd,0,SEEK_SET)==(off_t)-1)
    {
      printf ("i can't lseek for you");
      return 0;
    }
    int t;
    t=read(fd,buffer,20);
    if (t==-1)
    {
      printf ("I can't read");
      return 0;
    }
    if (lseek(fd,0,SEEK_SET)==(off_t)-1)
    {
      printf ("Can't lseek for you");
      return 0;
    }
    buffer[t]=0;
    int w=atoi(buffer)+1;
    snprintf(buffer,20,"%d",w);
    if (write(fd,buffer,strlen(buffer))==-1)
    {
      printf ("can't write");
      return 0;
    }
    if (sem_post(s1)==-1)
    {
      printf ("can't post");
      return 0;
    }
  }
  sem_close(s1);
  
  return 0;
}
